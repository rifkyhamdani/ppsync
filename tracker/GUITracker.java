package tracker;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import protocol.MetaFilesTracker;

/**
 *
 * @author rifky
 */
public final class GUITracker extends javax.swing.JFrame {

    public static int port = 6789;
    public static Connection conn;
    public static byte[] RC4KeyByte;
    public static MetaFilesTracker metaFilesTracker; /* MetaFileTracker */

    public static HashMap<String, Long> lastUpdate; /* lastupdate of everypeer */

    public static ArrayList<String> onlinePeer; /* online peer */

    public static final String usernameDB = "psync";
    public static final String passwordDB = "";
    public static final String serverDB = "";
    public static final String nameDB = "psync";
    public static boolean isStart = false;

    /**
     * Creates new form Tracker
     */
    public GUITracker() throws Exception {
        connectDB();
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception e) {
        }
        initComponents();
        setTitle("GUITracker");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Title.setText("P-SYNC TRACKER");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(Title)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(startButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(Title)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                .add(startButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ServerSocket serverSocket = new ServerSocket(port);
//    Thread t = new Thread(new Runnable(){
//
//        @Override
//        public void run() {
//            while (isStart) {
//                Socket socket = null;
//                try {
//                    socket = serverSocket.accept();
//                } catch (IOException ex) {
//                    Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                try {
//                    new ServerTracker(socket).start();
//                } catch (Exception ex) {
//                    Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        }
//        
//    });
    
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if (isStart) {
            isStart = false;
            startButton.setText("Start");
        } else {
            try {
            //ServerSocket serverSocket = new ServerSocket(port);
            isStart = true;
            startButton.setText("Stop");
            System.out.println("PSync Tracker started on port: " + port);
            metaFilesTracker = new MetaFilesTracker();
            onlinePeer = new ArrayList<String>();
            lastUpdate = new HashMap<String, Long>();
            Thread t = new Thread(new Runnable(){

        @Override
        public void run() {
            while (isStart) {
                Socket socket = null;
                try {
                    socket = serverSocket.accept();
                } catch (IOException ex) {
                    Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    new ServerTracker(socket).start();
                } catch (Exception ex) {
                    Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    });
            t.start();
//            new Thread(new Runnable() {
//                @Override
//                public void run() {
//                    while (true) {
//                        Socket socket = null;
//                        try {
//                            socket = serverSocket.accept();
//                        } catch (IOException ex) {
//                            Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                        try {
//                            new ServerTracker(socket).start();
//                        } catch (Exception ex) {
//                            Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
//                        }
//                    }
//                }
//            }).start();
//            while (true) {
//                Socket socket = serverSocket.accept();
//                new ServerTracker(socket).start();
//            }
//        } catch (IOException ex) {
//            Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new GUITracker().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(GUITracker.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    /**
     * Make connection
     */
    public static Connection dbConnect(String db_connect_string, String db_userid, String db_password) {
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection connc = DriverManager.getConnection(db_connect_string, db_userid, db_password);
            return connc;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * Connect to Database
     */
    public void connectDB() {
        conn = dbConnect("jdbc:mysql://" + serverDB + ":3306/" + nameDB, usernameDB, passwordDB);
    }

    private static void readConfig() {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
